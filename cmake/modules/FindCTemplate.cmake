set(FIND_CTEMPLATE_LIB_PATHS
  ${CTEMPLATE_ROOT}
  $ENV{CTEMPLATE_ROOT}
  ~/Library/Frameworks
  /Library/Frameworks
  /usr/local
  /usr/
  /sw/
  /opt/local
  /opt/csw
  /opt
)

FIND_PATH(CTEMPLATE_INCLUDE_DIR
  NAMES ctemplate/template.h
  PATH_SUFFIXES include/
  PATHS ${FIND_CTEMPLATE_LIB_PATHS}
)
MESSAGE("\nFound CTemplate include at: ${CTEMPLATE_INCLUDE_DIR}.\n")

FIND_LIBRARY(CTEMPLATE_LIBRARY_RELEASE
  NAMES ctemplate ctemplate-s
  PATH_SUFFIXES lib/ lib64/
  PATHS ${FIND_CTEMPLATE_LIB_PATHS}
)
MESSAGE("\nFound CTemplate release library at: ${CTEMPLATE_LIBRARY_RELEASE}.\n")

FIND_LIBRARY(CTEMPLATE_LIBRARY_DEBUG
  NAMES ctemplate-d ctemplate-s-d
  PATH_SUFFIXES lib/ lib64/
  PATHS ${FIND_CTEMPLATE_LIB_PATHS}
)
MESSAGE("\nFound CTemplate debug library at: ${CTEMPLATE_LIBRARY_DEBUG}.\n")

if(CTEMPLATE_LIBRARY_DEBUG OR CTEMPLATE_LIBRARY_RELEASE)
  set(CTEMPLATE_FOUND TRUE)
  if(CTEMPLATE_LIBRARY_DEBUG AND CTEMPLATE_LIBRARY_RELEASE)
    SET(CTEMPLATE_LIBRARY debug ${CTEMPLATE_LIBRARY_DEBUG} optimized ${CTEMPLATE_LIBRARY_RELEASE})
  endif()
  if(CTEMPLATE_LIBRARY_DEBUG AND NOT CTEMPLATE_LIBRARY_RELEASE)
    set(CTEMPLATE_LIBRARY_RELEASE ${CTEMPLATE_LIBRARY_DEBUG})
    set(CTEMPLATE_LIBRARY         ${CTEMPLATE_LIBRARY_DEBUG})
  endif()
  if(CTEMPLATE_LIBRARY_RELEASE AND NOT CTEMPLATE_LIBRARY_DEBUG)
    set(CTEMPLATE_LIBRARY_DEBUG ${CTEMPLATE_LIBRARY_RELEASE})
    set(CTEMPLATE_LIBRARY       ${CTEMPLATE_LIBRARY_RELEASE})
  endif()
else()
  set(CTEMPLATE_FOUND FALSE)
  set(CTEMPLATE_LIBRARY "")
endif()

IF(CTEMPLATE_FOUND)
  MESSAGE(STATUS "\nFound CTEMPLATE: ${CTEMPLATE_LIBRARY}\n")
ELSE()
  IF(CTEMPLATE_FIND_REQUIRED)
    MESSAGE(FATAL_ERROR "\nCould not find CTemplate library\n")
  ENDIF(CTEMPLATE_FIND_REQUIRED)
  set(CTEMPLATE_ROOT "" CACHE PATH "CTemplate top-level directory")
  message("\n-> CTemplate directory not found. Set CTEMPLATE_ROOT to CTemplate' top-level path (containing both \"include\" and \"lib\" directories).")
ENDIF()

MARK_AS_ADVANCED(
  CTEMPLATE_LIBRARY_DEBUG
  CTEMPLATE_LIBRARY_RELEASE
  CTEMPLATE_LIBRARY
  CTEMPLATE_INCLUDE_DIR
)
